---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  # no_log: "{{ molecule_no_log }}"
  tasks:
    - name: Identify virtual machines in VMware Workstation Pro / Fusion Pro
      qsypoq.vmware_desktop.unix_vmware_desktop_vminfos:
        username: "{{ lookup('env', 'HOMEINFRA_TEST_API_USERNAME') }}"
        password: "{{ lookup('env', 'HOMEINFRA_TEST_API_PASSWORD') }}"
        api_url: "{{ lookup('env', 'HOMEINFRA_TEST_API_URL') }}"
        api_port: "{{ lookup('env', 'HOMEINFRA_TEST_API_PORT') }}"
      register: homeinfra_test_vms

    - name: Identify the specific VM in question
      ansible.builtin.set_fact:
        homeinfra_test_vm: "{{ homeinfra_test_vms.msg | selectattr('path', 'match', \".*\\/\" ~ lookup('env', 'HOMEINFRA_TEST_VMNAME') ~ \"\\.vmx$\") | first }}"

    - name: Power up the virtual machine
      qsypoq.vmware_desktop.unix_vmware_desktop_power:
        target_vm: "{{ homeinfra_test_vm.id }}"
        username: "{{ lookup('env', 'HOMEINFRA_TEST_API_USERNAME') }}"
        password: "{{ lookup('env', 'HOMEINFRA_TEST_API_PASSWORD') }}"
        api_url: "{{ lookup('env', 'HOMEINFRA_TEST_API_URL') }}"
        api_port: "{{ lookup('env', 'HOMEINFRA_TEST_API_PORT') }}"
        # This needs to be a string, so YAML doesn't treat it as a bool
        state: "on"

    - name: Obtain the IP address from the VM (this may take a while)
      qsypoq.vmware_desktop.unix_vmware_desktop_adaptersmgmt:
        target_vm: "{{ homeinfra_test_vm.id }}"
        username: "{{ lookup('env', 'HOMEINFRA_TEST_API_USERNAME') }}"
        password: "{{ lookup('env', 'HOMEINFRA_TEST_API_PASSWORD') }}"
        api_url: "{{ lookup('env', 'HOMEINFRA_TEST_API_URL') }}"
        api_port: "{{ lookup('env', 'HOMEINFRA_TEST_API_PORT') }}"
        action: getip
      register: homeinfra_test_vm_ip
      # The IP likely won't be available right away, so try again until it is
      until: "homeinfra_test_vm_ip.msg is defined and homeinfra_test_vm_ip.msg.ip is defined and homeinfra_test_vm_ip.msg.ip != ''"
      retries: 30
      delay: 6

    - name: Create instance config
      block:
        - name: Populate instance config dict
          ansible.builtin.set_fact:
            instance_conf:
              - instance: instance
                address: "{{ homeinfra_test_vm_ip.msg.ip }}"
                port: 22
                user: "{{ lookup('env', 'HOMEINFRA_TEST_SSH_USER') }}"
                identity_file: "{{ lookup('env', 'HOMEINFRA_TEST_SSH_IDENTITY_FILE') }}"
                shell_type: sh
                become_method: sudo
                become_pass: "{{ lookup('env', 'HOMEINFRA_TEST_BECOME_PASSWORD') }}"
          register: instance_config_dict

        - name: Dump instance config
          ansible.builtin.copy:
            content: |
              # Molecule managed

              {{ instance_conf | to_json | from_json | to_yaml }}
            dest: "{{ molecule_instance_config }}"
            mode: "0600"
