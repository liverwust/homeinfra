---
# Configure shared DreamCompute resources

- name: Get the IPv4 address of the Ansible Control Node
  ansible.builtin.set_fact:
    ansible_control_node_external_ipv4: |-
      {{ (lookup('ansible.builtin.url',
                 'https://api.ipify.org?format=json',
                 split_lines=False) |
          from_json).ip }}

- name: Get the IPv6 address of the Ansible Control Node
  ansible.builtin.set_fact:
    ansible_control_node_external_ipv6: |-
      {{ (lookup('ansible.builtin.url',
                 'https://api64.ipify.org?format=json',
                 split_lines=False) |
          from_json).ip }}

- name: Resolve Ansible Control Node IPv4 and IPv6 addresses while creating security group ACLs
  ansible.builtin.set_fact:
    dreamhost_security_group_resolved_info_ansible_control_node:
      info:
        - source_type: ansible_control_node
          name: Ansible Control Node
          ether_type: IPv4
          cidr_addr: "{{ ansible_control_node_external_ipv4 }}/32"
        - source_type: ansible_control_node
          name: Ansible Control Node
          ether_type: IPv6
          cidr_addr: "{{ ansible_control_node_external_ipv6 }}/128"

- name: Resolve control-plane DNS names to IPv4 and IPv6 while creating security group ACLs
  ansible.builtin.set_fact:
    info:
      - source_type: |-
          {{ (dreamhost_security_group_item in groups['dreamcompute_control']) |
             ternary('control', 'worker') }}
        name: "{{ dreamhost_security_group_item }}"
        ether_type: IPv4
        cidr_addr: |-
          {{ lookup('community.general.dig',
                    dreamhost_security_group_item,
                    qtype='A') ~ "/32" }}
      - source_type: |-
          {{ (dreamhost_security_group_item in groups['dreamcompute_control']) |
             ternary('control', 'worker') }}
        name: "{{ dreamhost_security_group_item }}"
        ether_type: IPv6
        cidr_addr: |-
          {{ lookup('community.general.dig',
                    dreamhost_security_group_item,
                    qtype='AAAA') ~ "/128" }}
  loop_control:
    loop_var: dreamhost_security_group_item
  loop: "{{ groups['dreamcompute_control'] + groups['dreamcompute_worker'] }}"
  register: dreamhost_security_group_resolved_info_kubernetes_nodes

- name: Template the Security Group for control-plane Kubernetes nodes
  ansible.builtin.set_fact:
    dreamhost_security_group_control: |
      {{ dreamhost_security_group_control | default([]) +
         dreamhost_control_security_group_rules }}
  loop_control:
    loop_var: dreamhost_security_group_item
  loop: |-
    {{ ((dreamhost_security_group_resolved_info_kubernetes_nodes.results |
         map(attribute='ansible_facts') |
         map(attribute='info')) +
        dreamhost_security_group_resolved_info_ansible_control_node.info) |
       flatten }}

- name: Template the Security Group for worker-plane Kubernetes nodes
  ansible.builtin.set_fact:
    dreamhost_security_group_worker: |
      {{ dreamhost_security_group_worker | default([]) +
         dreamhost_worker_security_group_rules }}
  loop_control:
    loop_var: dreamhost_security_group_item
  loop: |-
    {{ ((dreamhost_security_group_resolved_info_kubernetes_nodes.results |
         map(attribute='ansible_facts') |
         map(attribute='info')) +
        dreamhost_security_group_resolved_info_ansible_control_node.info) |
       flatten |
       selectattr('source_type', 'equalto', 'control') }}

- name: Configure the base Security Group for all Kubernetes nodes
  openstack.cloud.security_group:
    description: Security Group for all Kubernetes nodes
    name: kube-security-group
    security_group_rules: "{{ dreamhost_security_group_rules }}"

- name: Configure the additional Security Group for Kubernetes control nodes
  openstack.cloud.security_group:
    description: Security Group for the Kubernetes control nodes
    name: kube-control-security-group
    security_group_rules: |-
      {{ dreamhost_security_group_control |
         sort(attribute='description') }}

- name: Configure the additional Security Group for Kubernetes worker nodes
  openstack.cloud.security_group:
    description: Security Group for the Kubernetes worker nodes
    name: kube-worker-security-group
    security_group_rules: |-
      {{ dreamhost_security_group_worker |
         sort(attribute='description') }}
