---
# Configure DreamCompute resources

- name: Get the IP address of the Ansible Control Node
  ansible.builtin.set_fact:
    ansible_control_node_external_ip: |-
      {{ (lookup('ansible.builtin.url',
                 'https://api.ipify.org?format=json',
                 split_lines=False) |
          from_json).ip }}

- name: Configure the Security Group for the Kubernetes guest
  openstack.cloud.security_group:
    description: |
      Security Group for the Kubernetes guest
    name: kube-security-group
    security_group_rules:
      - description: Inbound SSH from the Ansible Control Node
        direction: ingress
        ether_type: IPv4
        port_range_min: 22
        port_range_max: 22
        protocol: tcp
        remote_ip_prefix: "{{ ansible_control_node_external_ip }}/32"

      - description: Inbound ICMP4 (ping and friends)
        direction: ingress
        ether_type: IPv4
        protocol: icmp

      - description: Inbound ICMP6 (ping and friends)
        direction: ingress
        ether_type: IPv6
        protocol: icmpv6

      - description: Egress IPv4 (no restriction)
        direction: egress
        ether_type: IPv4
        protocol: any

      - description: Egress IPv4 (no restriction)
        direction: egress
        ether_type: IPv6
        protocol: any

- name: Configure the Key Pair for the Kubernetes guest
  openstack.cloud.keypair:
    name: kube-keypair
    public_key_file: "{{ dreamhost_public_key }}"

- name: Configure the Volume for the Kubernetes guest
  openstack.cloud.volume:
    description: |-
      (Non-Ephemeral) Volume for cluster data for Kubernetes
    name: "{{ inventory_hostname }}-data-volume"
    size: "{{ dreamhost_volume_size }}"

- name: Create the Virtual Machine for Kubernetes
  openstack.cloud.server:
    description: |
      Virtual machine hosting Kubernetes cluster
    auto_ip: false
    flavor: "{{ dreamhost_instance_flavor }}"
    image: "{{ dreamhost_instance_image }}"
    key_name: kube-keypair
    name: "{{ inventory_hostname }}"
    security_groups:
      - kube-security-group
    terminate_volume: true
    volume_size: "{{ dreamhost_volume_size }}"
    volumes:
      - "{{ inventory_hostname }}-data-volume"
  register: dreamhost_openstack_server

- name: Set up the ipv4 and ipv6 addresses for this host
  ansible.builtin.set_fact:
    dreamhost_access_ipv4: |-
      {{ dreamhost_openstack_server.server.addresses.public |
         selectattr('version', 'equalto', 4) |
         map(attribute='addr') |
         first }}

    dreamhost_access_ipv6: |-
      {{ dreamhost_openstack_server.server.addresses.public |
         selectattr('version', 'equalto', 6) |
         map(attribute='addr') |
         first }}

- name: For convenience (with new hosts), go ahead and overwrite ansible_host
  ansible.builtin.set_fact:
    ansible_host: "{{ dreamhost_access_ipv4 }}"
