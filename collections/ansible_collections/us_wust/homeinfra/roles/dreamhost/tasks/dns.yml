---
# Update DreamHost DNS records to match

- name: Retrieve DNS records
  ansible.builtin.uri:
    url: 'https://api.dreamhost.com/?key={{ dreamhost_dns_api_key }}&cmd=dns-list_records'
    return_content: true
  register: dreamhost_dns_record_listing
  # This is a read-only API endpoint
  check_mode: false
  changed_when: false

- name: Identify existing DNS records for inventory_hostname
  ansible.builtin.set_fact:
    dreamhost_dns_ipv4_record_result: |-
      {{ dreamhost_dns_record_listing.content |
         regex_search('^(?P<account_id>[^\t\n]+)\t' ~
                      '(?P<zone>' ~ dreamhost_dns_zone ~ ')\t' ~
                      '(?P<record>' ~ inventory_hostname ~ ')\t' ~
                      '(?P<type>A)\t' ~
                      '(?P<value>[^\t\n]+)\t' ~
                      '(?P<comment>[^\t\n]*)\t' ~
                      '(?P<editable>[^\t\n]+)$',
                      multiline=True) |
         default("") }}

    dreamhost_dns_ipv6_record_result: |-
      {{ dreamhost_dns_record_listing.content |
         regex_search('^(?P<account_id>[^\t\n]+)\t' ~
                      '(?P<zone>' ~ dreamhost_dns_zone ~ ')\t' ~
                      '(?P<record>' ~ inventory_hostname ~ ')\t' ~
                      '(?P<type>AAAA)\t' ~
                      '(?P<value>[^\t\n]+)\t' ~
                      '(?P<comment>[^\t\n]*)\t' ~
                      '(?P<editable>[^\t\n]+)$',
                      multiline=True) |
         default("") }}

- name: Further isolate the actual values from the DNS records
  ansible.builtin.set_fact:
    dreamhost_dns_ipv4_record: |-
      {{ dreamhost_dns_ipv4_record_result |
         regex_replace('^(?P<account_id>[^\t\n]+)\t' ~
                       '(?P<zone>[^\t\n]+)\t' ~
                       '(?P<record>[^\t\n]+)\t' ~
                       '(?P<type>[^\t\n]+)\t' ~
                       '(?P<value>[^\t\n]+)\t' ~
                       '(?P<comment>[^\t\n]*)\t' ~
                       '(?P<editable>[^\t\n]+)$',
                       '\g<value>',
                       multiline=True) }}

    dreamhost_dns_ipv6_record: |-
      {{ dreamhost_dns_ipv6_record_result |
         regex_replace('^(?P<account_id>[^\t\n]+)\t' ~
                       '(?P<zone>[^\t\n]+)\t' ~
                       '(?P<record>[^\t\n]+)\t' ~
                       '(?P<type>[^\t\n]+)\t' ~
                       '(?P<value>[^\t\n]+)\t' ~
                       '(?P<comment>[^\t\n]*)\t' ~
                       '(?P<editable>[^\t\n]+)$',
                       '\g<value>',
                       multiline=True) |
         lower |
         regex_replace(':0+', ':') }}

- name: Delete existing ipv4 DNS record if it is incorrect
  ansible.builtin.uri:
    url: 'https://api.dreamhost.com/?key={{ dreamhost_dns_api_key }}&cmd=dns-remove_record&record={{ inventory_hostname }}&type=A&value={{ dreamhost_dns_ipv4_record }}'
  when:
    - 'dreamhost_dns_ipv4_record != ""'
    - 'dreamhost_dns_ipv4_record != dreamhost_access_ipv4'
  # This is a disruptive / destructive operation
  changed_when: true

- name: Delete existing ipv6 DNS record if it is incorrect
  ansible.builtin.uri:
    url: 'https://api.dreamhost.com/?key={{ dreamhost_dns_api_key }}&cmd=dns-remove_record&record={{ inventory_hostname }}&type=AAAA&value={{ dreamhost_dns_ipv6_record }}'
  when:
    - 'dreamhost_dns_ipv6_record != ""'
    - 'dreamhost_dns_ipv6_record != dreamhost_access_ipv6'
  # This is a disruptive / destructive operation
  changed_when: true

- name: Add new ipv4 DNS record if it was missing or incorrect
  ansible.builtin.uri:
    url: 'https://api.dreamhost.com/?key={{ dreamhost_dns_api_key }}&cmd=dns-add_record&record={{ inventory_hostname }}&type=A&value={{ dreamhost_access_ipv4 }}'
  when:
    - 'dreamhost_dns_ipv4_record != dreamhost_access_ipv4'
  # This is a disruptive / destructive operation
  changed_when: true

- name: Add new ipv6 DNS record if it was missing or incorrect
  ansible.builtin.uri:
    url: 'https://api.dreamhost.com/?key={{ dreamhost_dns_api_key }}&cmd=dns-add_record&record={{ inventory_hostname }}&type=AAAA&value={{ dreamhost_access_ipv6 }}'
  when:
    - 'dreamhost_dns_ipv6_record|lower != dreamhost_access_ipv6|lower'
  # This is a disruptive / destructive operation
  changed_when: true
