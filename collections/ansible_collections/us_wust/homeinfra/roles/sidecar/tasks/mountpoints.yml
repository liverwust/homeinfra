---
# Mount SMB and iSCSI shares from the QNAP itself

- name: Ensure that the mountpoint destinations exist
  ansible.builtin.file:
    state: directory
    path: "{{ homeinfra_sidecar_nfs_item.destination }}"
  loop_control:
    loop_var: homeinfra_sidecar_nfs_item
  loop: "{{ homeinfra_sidecar_smb_mounts|default([]) + homeinfra_sidecar_iscsi_targets|default([]) }}"

- name: Mount SMB shares from the QNAP itself
  ansible.posix.mount:
    src: "//{{ homeinfra_sidecar_smb_mount_server }}/{{ homeinfra_sidecar_smb_item.source }}"
    path: "{{ homeinfra_sidecar_smb_item.destination }}"
    boot: true
    fstype: smb3
    state: mounted
    opts: "rw,vers=3,file_mode=0600,dir_mode=0700,username={{ homeinfra_sidecar_smb_username }},password={{ homeinfra_sidecar_smb_password }}"
  loop_control:
    loop_var: homeinfra_sidecar_smb_item
  loop: "{{ homeinfra_sidecar_smb_mounts }}"

- name: Save out the OpenSCSI authentication information to a persistent config file
  ansible.builtin.replace:
    path: /etc/iscsi/iscsid.conf
    regexp: "^#?\\s*({{ homeinfra_sidecar_iscsi_auth.key }})(\\s*=\\s*).*$"
    replace: "\\1\\2{{ homeinfra_sidecar_iscsi_auth.value }}"
  loop:
    - key: node.session.auth.username
      value: "{{ homeinfra_sidecar_iscsi_target.node_user | default(omit) }}"
    - key: node.session.auth.password
      value: "{{ homeinfra_sidecar_iscsi_target.node_pass | default(omit) }}"
    - key: node.session.auth.username_in
      value: "{{ homeinfra_sidecar_iscsi_target.node_user_in | default(omit) }}"
    - key: node.session.auth.password_in
      value: "{{ homeinfra_sidecar_iscsi_target.node_pass_in | default(omit) }}"
  loop_control:
    loop_var: homeinfra_sidecar_iscsi_auth
  when: "homeinfra_sidecar_iscsi_target is defined and homeinfra_sidecar_iscsi_auth.value is defined"
  notify: Restart iscsi services

- name: Set up openscsi initiators, if needed
  community.general.open_iscsi:
    auto_node_startup: "{{ homeinfra_sidecar_iscsi_target.auto_node_startup | default(true) }}"
    auto_portal_startup: "{{ homeinfra_sidecar_iscsi_target.auto_portal_startup | default(true) }}"
    login: "{{ homeinfra_sidecar_iscsi_target.login | default(true) }}"
    node_pass: "{{ homeinfra_sidecar_iscsi_target.node_pass | default(omit) }}"
    node_pass_in: "{{ homeinfra_sidecar_iscsi_target.node_pass_in | default(omit) }}"
    node_user: "{{ homeinfra_sidecar_iscsi_target.node_user | default(omit) }}"
    node_user_in: "{{ homeinfra_sidecar_iscsi_target.node_user_in | default(omit) }}"
    portal: "{{ homeinfra_sidecar_iscsi_target.portal | mandatory }}"
    target: "{{ homeinfra_sidecar_iscsi_target.target | mandatory }}"
  when: "homeinfra_sidecar_iscsi_target is defined"

- name: Mount the filesystem(s) inside the iSCSI block devices
  ansible.posix.mount:
    src: "LABEL=\"{{ homeinfra_sidecar_iscsi_target.filesystem_label }}\""
    path: "{{ homeinfra_sidecar_iscsi_target.destination }}"
    boot: true
    fstype: "{{ homeinfra_sidecar_iscsi_target.filesystem_type }}"
    state: mounted
    # https://www.suse.com/support/kb/doc/?id=000019648
    opts: "_netdev,x-systemd.requires=iscsi.service"
  when: "homeinfra_sidecar_iscsi_target is defined"

...
